<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EidSamples</name>
    </assembly>
    <members>
        <member name="M:EidSamples.Sign.#ctor">
            <summary>
            Default constructor. Will instantiate the beidpkcs11.dll pkcs11 module
            </summary>
        </member>
        <member name="M:EidSamples.Sign.DoSign(System.Byte[],System.String)">
            <summary>
            Sign data with a named private key
            </summary>
            <param name="data">Data to be signed</param>
            <param name="privatekeylabel">Label for private key. Can be "Signature" or "Authentication"</param>
            <returns>Signed data.</returns>
        </member>
        <member name="M:EidSamples.Sign.DoChallenge(System.Byte[])">
            <summary>
            Challenge an applet 1.8 card
            </summary>
            <param name="data">Data to be signed</param>
            <returns>Signed challenge data.</returns>
        </member>
        <member name="T:EidSamples.Integrity">
            Example Integrity checking class
            Some examples on how to verify certificates and signatures
        </member>
        <member name="M:EidSamples.Integrity.Verify(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Verify a signature with a given certificate. It is assumed that
            the signature is made from a SHA1 hash of the data.
            </summary>
            <param name="data">Signed data</param>
            <param name="signature">Signature to be verified</param>
            <param name="certificate">Certificate containing the public key used to verify the code</param>
            <returns>True if the verification succeeds</returns>
        </member>
        <member name="M:EidSamples.Integrity.VerifyChallenge(System.Byte[],System.Byte[],Net.Sf.Pkcs11.Objects.ECPublicKey)">
            <summary>
            Verify a card challenge against the card's public key. It is assumed that
            the signature is an EC signature (curve Secp384r1) from a SHA384 hash of the data.
            </summary>
            <param name="data">challenge</param>
            <param name="signature">Signature of the challenge</param>
            <param name="eCPublicKey">ECPublicKey object to verify the signed challenge</param>
            <returns>True if the verification succeeds</returns>
        </member>
        <member name="M:EidSamples.Integrity.CheckCertificateChain(System.Collections.Generic.List{System.Byte[]},System.Byte[])">
            <summary>
            Check a certificate chain. In order to trust the certficate, the root certificate must be
            stored in the trusted root certificates store. An online CRL check of the chain will be carried out.
            </summary>
            <param name="CACertificates">CA certificates</param>
            <param name="leafCertificate">The certificate whose chain will be checked</param>
            <returns>True if the certificate is trusted according to the system settings</returns>
        </member>
        <member name="M:EidSamples.Program.SavePhotoToFile(System.Byte[],System.String)">
            <summary>
            Saves the byte array as an image file.
            </summary>
            <param name="photoBytes">The byte array containing the image data.</param>
            <param name="fileName">The name of the file to save (e.g., "photo.jpg").</param>
            <returns>The full path to the saved file, or null if saving failed.</returns>
        </member>
        <member name="M:EidSamples.Program.OpenImage(System.String)">
            <summary>
            Opens the image file using the default image viewer.
            </summary>
            <param name="filePath">The full path to the image file.</param>
        </member>
        <member name="M:EidSamples.ReadData.#ctor">
            <summary>
            Default constructor. Will instantiate the beidpkcs11.dll pkcs11 module
            </summary>
        </member>
        <member name="M:EidSamples.ReadData.GetSlotDescription">
            <summary>
            Gets the description of the first slot (cardreader) found
            </summary>
            <returns>Description of the first slot found</returns>
        </member>
        <member name="M:EidSamples.ReadData.CreateSession(Net.Sf.Pkcs11.Slot)">
            <summary>
            Tries to create a Session, returns NULL in case of failure
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetTokenInfoLabel">
            <summary>
            Gets label of token found in the first non-empty slot (cardreader)
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetSpecialStatus">
            <summary>
            Get surname of the owner of the token (eid) in the first non-empty slot (cardreader)
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetSurname">
            <summary>
            Get surname of the owner of the token (eid) in the first non-empty slot (cardreader)
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetDateOfBirth">
            <summary>
            Get date of birth of the owner. This is a language specific string
            More info about the format can be found in the eid specs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetData(System.String)">
            <summary>
            Generic function to get string data objects from label
            </summary>
            <param name="label">Value of label attribute of the object</param>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetIdFile">
            <summary>
            Return ID data file contents
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetAddressFile">
            <summary>
            Return Address file contents
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetPhotoFile">
            <summary>
            Return Photo file contents
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetIdSignatureFile">
            <summary>
            Return ID file signature
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetAddressSignatureFile">
            <summary>
            Return Address file signature
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetCertificateRNFile">
            <summary>
            Return RRN Certificate. This certificate is used to validate
            the file signatures
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetFile(System.String)">
            <summary>
            Return raw byte data from objects
            </summary>
            <param name="Filename">Label value of the object</param>
            <returns>byte array with file</returns>
        </member>
        <member name="M:EidSamples.ReadData.GetCertificateAuthenticationFile">
            <summary>
            Return the "authentication" leaf certificate file
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetCertificateSignatureFile">
            <summary>
            Return the "signature" leaf certificate file
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetCertificateCAFile">
            <summary>
            Return the Intermediate CA certificate file
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetCertificateRootFile">
            <summary>
            Return the root certificate file
            </summary>
            <returns></returns>
        </member>
        <member name="M:EidSamples.ReadData.GetCertificateFile(System.String)">
            <summary>
            Return raw byte data from objects of object class Certificate
            </summary>
            <param name="Certificatename">Label value of the certificate object</param>
            <returns>byte array with certificate file</returns>
        </member>
        <member name="M:EidSamples.ReadData.GetCertificateLabels">
            <summary>
            Returns a list of PKCS11 labels of the certificate on the card
            </summary>
            <returns>List of labels of certificate objects</returns>
        </member>
        <member name="M:EidSamples.ReadData.GetPublicKey(System.String)">
            <summary>
            Return raw byte data from objects of object class Public Key
            </summary>
            <param name="PubKeyName">Label value of the key object</param>
            <returns>ECPublicKey object of the public key found</returns>
        </member>
        <member name="T:EidSamples.tests.CertificateValidityTests">
            <summary> 
            checks the validity of the certificate chain
            </summary> 
        </member>
        <member name="M:EidSamples.tests.CertificateValidityTests.ValidityAuthenticationChain">
            <summary> 
            checks the validity of the authentication certificate chain
            </summary> 
        </member>
        <member name="M:EidSamples.tests.CertificateValidityTests.ValiditySignatureChain">
            <summary> 
            checks the validity of the signature certificate chain
            </summary> 
        </member>
        <member name="T:EidSamples.tests.SignTests">
            <summary> 
            Tests the creation of digital signatures
            </summary>
        </member>
        <member name="M:EidSamples.tests.SignTests.SignAuthentication">
            <summary> 
            Tests the creation of digital signatures, using the authentication key
            </summary>
        </member>
        <member name="M:EidSamples.tests.SignTests.SignSignature">
            <summary> 
            Tests the creation of digital signatures, using the signature key
            </summary>
        </member>
        <member name="M:EidSamples.tests.SignTests.ChallengeCard">
            <summary> 
            Tests the creation of EC digital signatures, using the card key
            Only available for applet 1.8 cards
            </summary>
        </member>
        <member name="T:EidSamples.tests.IntegrityTests">
            <summary> 
            Tests the integrity of the data files that are retrieved from the eID card
            </summary>
        </member>
        <member name="M:EidSamples.tests.IntegrityTests.IntegrityFails">
            <summary> 
            Tests if integrity test fails when no certificateRRN is supplied
            </summary>
        </member>
        <member name="M:EidSamples.tests.IntegrityTests.IntegrityIdentityFile">
            <summary> 
            Tests the integrity of the identity data file that is retrieved from the eID card
            </summary>
        </member>
        <member name="M:EidSamples.tests.IntegrityTests.IntegrityIdentityFileWrongSignature">
            <summary> 
            Tests if integrity test fails when address file signature is used to check validity of id file
            </summary>
        </member>
        <member name="M:EidSamples.tests.IntegrityTests.IntegrityIdentityFileWrongCertificate">
            <summary> 
            Tests if integrity test fails when the root certificate is used to check file integrity of the id data file
            </summary>
        </member>
        <member name="M:EidSamples.tests.IntegrityTests.IntegrityAddressFile">
            <summary> 
            Tests the integrity of the address data file that is retrieved from the eID card
            </summary>
        </member>
        <member name="T:EidSamples.tests.DataTests">
            <summary> 
            Tests some basic data retrieval (from the eID card, or the pkcs11 module)
            </summary>
        </member>
        <member name="M:EidSamples.tests.DataTests.GetSlotDescription">
            <summary>
            Tests if pkcs11 finds the attached card reader "ACS CCID USB Reader 0"
            Test is only valid if such card reader is attached
            </summary>
        </member>
        <member name="M:EidSamples.tests.DataTests.GetTokenInfoLabel">
            <summary>
            Tests if pkcs11 labels the eID card as "BELPIC"
            </summary>
        </member>
        <member name="M:EidSamples.tests.DataTests.GetSpecialStatus">
            <summary>
            Tests the retrieval of the special status from the parsed identity file from the eID card
            </summary>
        </member>
        <member name="M:EidSamples.tests.DataTests.GetSurname">
            <summary>
            Tests the retrieval of the surname from the parsed identity file from the eID card
            </summary>
        </member>
        <member name="M:EidSamples.tests.DataTests.GetDateOfBirth">
            <summary>
            Tests the retrieval of the birth date from the parsed identity file from the eID card
            </summary>
        </member>
        <member name="M:EidSamples.tests.DataTests.GetIdFile">
            <summary>
            Tests the retrieval of the Identity file from the eID card
            </summary>
        </member>
        <member name="M:EidSamples.tests.DataTests.GetCertificateLabels">
            <summary> 
            Tests the retrieval of the Authentication certificate label
            This test is only valid for eID cards with an authentication certificate
            </summary> 
        </member>
        <member name="M:EidSamples.tests.DataTests.GetCertificateRNFile">
            <summary> 
            Tests the retrieval of the RN certificate, and check if it is named 'root'
            </summary> 
        </member>
        <member name="M:EidSamples.tests.DataTests.GetCertificateRootFile">
            <summary> 
            Tests the retrieval of the Belgium root certificate, and check if it is self-signed, and named 'root'
            </summary> 
        </member>
        <member name="M:EidSamples.tests.DataTests.GetPhotoFile">
            <summary> 
            Tests retrieval of the photo file, and checks if its size is as expected
            </summary> 
        </member>
        <member name="M:EidSamples.tests.DataTests.StoreCertificateRNFile">
            <summary> 
            Tests the retrieval of the RN certificate, and try to add it in the my store
            </summary> 
        </member>
    </members>
</doc>
